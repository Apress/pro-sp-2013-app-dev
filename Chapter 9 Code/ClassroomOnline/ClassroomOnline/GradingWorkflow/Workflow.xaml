<Activity mc:Ignorable="sap sap2010 sads" x:Class="ClassroomOnline.Grading_Workflow.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="ClassroomOnline.Grading_Workflow.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.Design</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Web.Extensions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>ClassroomOnlineWeb</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>ClassroomOnline</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p:DynamicValue" Name="hwProps" />
      <Variable x:TypeArguments="x:Int32" Name="ModifiedBy" />
      <Variable x:TypeArguments="x:String" Name="AssignmentTitle" />
      <Variable x:TypeArguments="p:DynamicValue" Name="studentProps" />
      <Variable x:TypeArguments="x:String" Name="StudentName" />
      <Variable x:TypeArguments="x:Int32" Name="GradingTaskOutcome" />
      <Variable x:TypeArguments="x:Int32" Name="GradingTaskID" />
      <Variable x:TypeArguments="x:Int32" Name="HWItemID" />
    </Sequence.Variables>
    <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Current SPListItem" sap2010:WorkflowViewState.IdRef="LookupSPListItem_1">
      <p1:LookupSPListItem.ItemId>
        <InArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p1:GetCurrentItemId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItem.ItemId>
      <p1:LookupSPListItem.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p1:GetCurrentListId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItem.ListId>
      <p1:LookupSPListItem.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">hwProps</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItem.Result>
    </p1:LookupSPListItem>
    <p:GetODataProperties DisplayName="Get HW Item Properties" sap2010:WorkflowViewState.IdRef="GetODataProperties_1">
      <p:GetODataProperties.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">hwProps</mca:CSharpValue>
        </InArgument>
      </p:GetODataProperties.Source>
      <scg:Dictionary x:TypeArguments="x:String, OutArgument">
        <OutArgument x:TypeArguments="x:Int32" x:Key="EditorId">
          <mca:CSharpReference x:TypeArguments="x:Int32">ModifiedBy</mca:CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Title">
          <mca:CSharpReference x:TypeArguments="x:String">AssignmentTitle</mca:CSharpReference>
        </OutArgument>
      </scg:Dictionary>
    </p:GetODataProperties>
    <p1:LookupSPUser DisplayName="Lookup Student SPUser" sap2010:WorkflowViewState.IdRef="LookupSPUser_1">
      <p1:LookupSPUser.PrincipalId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">ModifiedBy</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPUser.PrincipalId>
      <p1:LookupSPUser.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">studentProps</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPUser.Result>
    </p1:LookupSPUser>
    <p:GetODataProperties DisplayName="GetDynamicValueProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_2">
      <p:GetODataProperties.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">studentProps</mca:CSharpValue>
        </InArgument>
      </p:GetODataProperties.Source>
      <scg:Dictionary x:TypeArguments="x:String, OutArgument">
        <OutArgument x:TypeArguments="x:String" x:Key="Title">
          <mca:CSharpReference x:TypeArguments="x:String">StudentName</mca:CSharpReference>
        </OutArgument>
      </scg:Dictionary>
    </p:GetODataProperties>
    <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_1">
      <p1:WriteToHistory.Message>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">StudentName + " has submitted '" + AssignmentTitle + "' for grading."</mca:CSharpValue>
        </InArgument>
      </p1:WriteToHistory.Message>
    </p1:WriteToHistory>
    <p1:SingleTask Body="{x:Null}" DueDate="{x:Null}" TaskId="{x:Null}" AssignedTo="Steve Wright" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F0078D0295D11C649849467E259ECF0FD4B" DefaultTaskOutcome="0" DisplayName="Assign Grading Task" sap2010:WorkflowViewState.IdRef="SingleTask_1" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" SendReminderEmail="True" Title="Workflow task" WaitForTaskCompletion="True">
      <p1:SingleTask.Outcome>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">GradingTaskOutcome</mca:CSharpReference>
        </OutArgument>
      </p1:SingleTask.Outcome>
      <p1:SingleTask.RelatedContentLinkListId>
        <InArgument x:TypeArguments="s:Guid">
          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p1:GetCurrentListId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:SingleTask.RelatedContentLinkListId>
      <p1:SingleTask.RelatedContentLinkListItemId>
        <InArgument x:TypeArguments="s:Guid">
          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p1:GetCurrentItemGuid />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:SingleTask.RelatedContentLinkListItemId>
      <p1:SingleTask.RelatedContentLinkListItemIntegerId>
        <InArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p1:GetCurrentItemId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:SingleTask.RelatedContentLinkListItemIntegerId>
      <p1:SingleTask.TaskItemId>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">GradingTaskID</mca:CSharpReference>
        </OutArgument>
      </p1:SingleTask.TaskItemId>
    </p1:SingleTask>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">GradingTaskOutcome == 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="p:DynamicValue" Name="taskProps" />
            <Variable x:TypeArguments="x:String" Name="PercentOfCourseGrade" />
            <Variable x:TypeArguments="x:String" Name="PointsPossible" />
            <Variable x:TypeArguments="x:String" Name="PointsAchieved" />
            <Variable x:TypeArguments="p:DynamicValue" Name="gradeProps" />
          </Sequence.Variables>
          <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Grading Task" sap2010:WorkflowViewState.IdRef="LookupSPListItem_2">
            <p1:LookupSPListItem.ItemId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">GradingTaskID</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItem.ItemId>
            <p1:LookupSPListItem.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/WorkflowTaskList;}")</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItem.ListId>
            <p1:LookupSPListItem.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">taskProps</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPListItem.Result>
          </p1:LookupSPListItem>
          <p:GetODataProperties DisplayName="GetDynamicValueProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_3">
            <p:GetODataProperties.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">taskProps</mca:CSharpValue>
              </InArgument>
            </p:GetODataProperties.Source>
            <scg:Dictionary x:TypeArguments="x:String, OutArgument">
              <OutArgument x:TypeArguments="x:String" x:Key="PercentOfCourseGrade">
                <mca:CSharpReference x:TypeArguments="x:String">PercentOfCourseGrade</mca:CSharpReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="PointsPossible">
                <mca:CSharpReference x:TypeArguments="x:String">PointsPossible</mca:CSharpReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="PointsAchieved">
                <mca:CSharpReference x:TypeArguments="x:String">PointsAchieved</mca:CSharpReference>
              </OutArgument>
            </scg:Dictionary>
          </p:GetODataProperties>
          <p:BuildDynamicValue DisplayName="Build Grade Item Properties" sap2010:WorkflowViewState.IdRef="BuildDynamicValue_1">
            <p:BuildDynamicValue.Result>
              <InOutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">gradeProps</mca:CSharpReference>
              </InOutArgument>
            </p:BuildDynamicValue.Result>
            <scg:Dictionary x:TypeArguments="x:String, InArgument">
              <InArgument x:TypeArguments="x:String" x:Key="Title">
                <mca:CSharpValue x:TypeArguments="x:String">AssignmentTitle</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="PercentofCourseGrade">
                <mca:CSharpValue x:TypeArguments="x:String">PercentOfCourseGrade</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="PointsAchieved">
                <mca:CSharpValue x:TypeArguments="x:String">PointsAchieved</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="PointsPossible">
                <mca:CSharpValue x:TypeArguments="x:String">PointsPossible</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StudentName">
                <mca:CSharpValue x:TypeArguments="x:String">StudentName</mca:CSharpValue>
              </InArgument>
            </scg:Dictionary>
          </p:BuildDynamicValue>
          <p1:CreateListItem CreatedListItemProperties="{x:Null}" ItemGuid="{x:Null}" ItemId="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Create Grade Item" sap2010:WorkflowViewState.IdRef="CreateListItem_1">
            <p1:CreateListItem.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Grades;}")</mca:CSharpValue>
              </InArgument>
            </p1:CreateListItem.ListId>
            <p1:CreateListItem.ListItemPropertiesDynamicValue>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">gradeProps</mca:CSharpValue>
              </InArgument>
            </p1:CreateListItem.ListItemPropertiesDynamicValue>
          </p1:CreateListItem>
        </Sequence>
      </If.Then>
      <If.Else>
        <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" DisplayName="Send Rejection E-Mail" sap2010:WorkflowViewState.IdRef="Email_1" Subject="Assignment Rejected">
          <p1:Email.Body>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Your submission for '" + AssignmentTitle + "' has been rejected. Please contact your instructor."</mca:CSharpValue>
            </InArgument>
          </p1:Email.Body>
          <p1:Email.To>
            <InArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">new System.Collections.ObjectModel.Collection&lt;string&gt;() { StudentName }</mca:CSharpValue>
            </InArgument>
          </p1:Email.To>
        </p1:Email>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d35DOlxVc2Vyc1xTdGV2ZVxEb2N1bWVudHNcVEZTT25saW5lXFNoYXJlUG9pbnQgMjAxMyBBcHBzXENoYXB0ZXI5XENsYXNzcm9vbU9ubGluZVxDbGFzc3Jvb21PbmxpbmVcR3JhZGluZ1dvcmtmbG93XFdvcmtmbG93LnhhbWxGLwOGAg4CAQE6BU4bAwHpAk8FXRwDAc0CXgVpFwMBugJqBXUcAwGnAnYFfBkDAZ0CfQWdARUDAfcBngEFhAIKAgECRAtGKAMB9AJLC0teAwHrAj0LPygDAeoCVwtXWgMB4AJSC1JWAwHXAloLWmADAc4CYQthUgMBxAJmC2ZjAwG7Am0LbVsDAbECcgtyXAMBqAJ5C3mOAQMBngJ9d33UAgMBnAJ91wd95AcDAZsCfZwLfZ8LAwGaAn2RA32+BQMBmQKFAQuHASgDAZgCffEGffQGAwGXAoABC4ABYgMBjgJ99wV9ggYDAY0CfbILfbgLAwGMAowBC44BKAMBiwJ94Ap97goDAYoCkwELlQEoAwGJAn2/C33OCwMBiAJ99gd9ywoDAYcCfZEGfd0GAwGGAn1UfWIDAYUCmgELmgFdAwH8AX3lC33rCwMB+wF97AJ9+wIDAfoBfdcFfeYFAwH5AX2FC32ICwMB+AGhAQuhAWECAQOlAQn0ARQCASD3AQmCAhQCAQxFDUUkBAH0AgE+DT4kBAHqAgGGAQ2GASQEAZgCAY0BDY0BJgQBiwIBlAENlAEkBAGJAgGtAQu9ASEDAcwBvgELzwEiAwGTAdABC+cBIQIBPugBC/MBHwIBIf8BD/8BqgECARf6AQ/6Aa8BAgEO9wGjAfcBuAECAQ21ARG1AYMBAwHpAboBEboBZgMB2wGwARGwAVsDAc0ByQERyQFlAwG+AcEBEcEBXgMBsAHMARHMAWUDAaIBxgERxgFrAwGUAeEBEeEBXQMBhQHbARHbAWMCAXfTARHTAWcCAWnYARHYAV4CAVvkARHkAVoCAU3eARHeAV0CAT/wARHwAV8CATDrARHrAXkCASI=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LookupSPListItem_1" sap:VirtualizedContainerService.HintSize="494,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_1" sap:VirtualizedContainerService.HintSize="494,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Homework</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPUser_1" sap:VirtualizedContainerService.HintSize="494,89" />
      <sap2010:ViewStateData Id="GetODataProperties_2" sap:VirtualizedContainerService.HintSize="494,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_1" sap:VirtualizedContainerService.HintSize="494,68" />
      <sap2010:ViewStateData Id="SingleTask_1" sap:VirtualizedContainerService.HintSize="494,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ContentTypeId" DisplayName="GradingTask" Value="0x0108003365C4474CAE8C42BCE396314E88E51F0078D0295D11C649849467E259ECF0FD4B" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_2" sap:VirtualizedContainerService.HintSize="247,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="WorkflowTaskList" Value="Lists/WorkflowTaskList" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_3" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildDynamicValue_1" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Grades</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateListItem_1" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Grades" Value="Lists/Grades" />
            </scg:Dictionary>
            <x:String x:Key="ListItemPropertiesDynamicValue.SelectedEntityType">Lists/Grades</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="269,585">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="494,735" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="516,1618">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ClassroomOnline.Grading_Workflow.Workflow_1" sap:VirtualizedContainerService.HintSize="556,1698" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>